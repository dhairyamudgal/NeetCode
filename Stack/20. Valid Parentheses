

class Solution {
public:
    bool isValid(string s) {
        stack<char> st;
        unordered_map<char, char> parentheses = {
            {')', '('},
            {']', '['},
            {'}', '{'}
        };

        for(int i=0;i<s.length();i++){
            char ch = s[i];
            if(st.empty() || parentheses.find(ch)== parentheses.end()){
                st.push(ch);
            }

            else{
                if(st.top() == parentheses[ch]){
                    st.pop();
                }
                else return false;

            }
        }
        if(st.empty()) return true;;

        return false;

      
    }
};
